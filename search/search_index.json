{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NimblePHP","text":"<p>NimblePHP to prosty framework PHP oparty o MVC kt\u00f3ry ma u\u0142atwi\u0107 tworzenie projekt\u00f3w.</p>"},{"location":"#cele","title":"Cele","text":"<p>Framework opiera si\u0119 na prostych celach:</p> <ol> <li>Prostota</li> <li>Przejszysto\u015b\u0107</li> <li>Szybko\u015b\u0107</li> </ol>"},{"location":"default-config/","title":"Domy\u015blna konfiguracja","text":"<pre><code>DEBUG=false\nLOG=true\nDEFAULT_CONTROLLER=index\nDEFAULT_METHOD=index\nDATABASE=false\nDATABASE_TYPE=mysql\nDATABASE_PATH=\"database.sqlite\"\nDATABASE_CHARSET=utf8\nDATABASE_HOST=127.0.0.1\nDATABASE_NAME=\nDATABASE_USERNAME=\nDATABASE_PASSWORD=\nDATABASE_PORT=3306\n</code></pre>"},{"location":"default-config/#wana-konfiguracja","title":"W\u0142ana konfiguracja","text":"<p>W\u0142asn\u0105 konfiguracj\u0119 mo\u017ceby zapisywa\u0107 w plikach w g\u0142\u00f3wnym folderze projektu, pierwszym plikiem jest <code>.env</code> kt\u00f3ry powinien powiada\u0107 konfiguracj\u0119 bez wra\u017cliwych danych, drugim natomiat jest <code>.env.local</code> kt\u00f3ry powinien by\u0107 dodany do <code>.gitignore</code> i nie zapisywany w projekcie plik ten nadpisuje konfiguracje z wszystkich poprzednich sposob\u00f3w \u0142adowania</p>"},{"location":"default-config/#uzycie","title":"U\u017cycie","text":"<p>Konfiguracj\u0119 odczytujemy za pomoc\u0105 $_ENV</p>"},{"location":"exceptions/","title":"Wyj\u0105tki","text":"<p>Lista zwracanych wyj\u0105tk\u00f3w:</p>"},{"location":"exceptions/#gowny-wyjatek","title":"G\u0142\u00f3wny wyj\u0105tek","text":"<p>Nadrz\u0119dny wyj\u0105tek, \"rodzic\" wszystkich wyj\u0105tk\u00f3w zwracanych przez framework.</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"System error\", int $code = 500, ?Throwable $previous = null)\n</code></pre>"},{"location":"exceptions/#wyjatek-nie-znaleziono","title":"Wyj\u0105tek \"nie znaleziono\"","text":"<p>Wyj\u0105tek zwracany, je\u017celi dana klasa, metoda, plik itd. nie istnieje.</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"Not found\", int $code = 404, ?Throwable $previous = null)\n</code></pre>"},{"location":"exceptions/#ukryty-wyjatek","title":"Ukryty wyj\u0105tek","text":"<p>Wyj\u0105tek zwraca b\u0142\u0105d ale ukrywa tre\u015b\u0107 dla klienta</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\HiddenException\n</code></pre> <p>Rodzic:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"System error\", int $code = 500, ?Throwable $previous = null)```\n</code></pre> <p>Metody:</p>"},{"location":"exceptions/#gethiddenmessage","title":"getHiddenMessage","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Zwraca ukryt\u0105 tre\u015b\u0107</p>"},{"location":"exceptions/#wyjatek-bazodanowy","title":"Wyj\u0105tek bazodanowy","text":"<p>Wyj\u0105tek dla b\u0142\u0119d\u00f3w bazy danych</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\DatabaseException\n</code></pre> <p>Rodzic:</p> <pre><code>Nimblephp\\framework\\Exception\\HiddenException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"Database error\", int $code = 500, ?Throwable $previous = null)\n</code></pre>"},{"location":"how-start/","title":"Jak zacz\u0105\u0107","text":"<p>Na samym pocz\u0105tku nale\u017cy zaimportowa\u0107 repozytorium composer</p> <pre><code>composer require nimblephp/framework\n</code></pre> <p>Nast\u0119pnie nale\u017cy utworzy\u0107 folder <code>public</code> a w nim plik <code>index.php</code> o tre\u015bci:</p> <pre><code>&lt;?php\n\nrequire('../vendor/autoload.php');\n\n$route = new \\Nimblephp\\framework\\Route(new \\Nimblephp\\framework\\Request());\n$kernel = new \\Nimblephp\\framework\\Kernel($route);\n$kernel-&gt;handle();\n</code></pre> <p>oraz plik .htaccess z zawarto\u015bci\u0105:</p> <pre><code>RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.+)$ index.php?url=$1 [QSA,L]\n</code></pre> <p>Teraz nale\u017cy uruchomi\u0107 plik index.php, pierwsze uruchomienie spowoduje utworzenie folder\u00f3w wymaganych przez projekt</p> <p>Aktualnie powinno wygl\u0105da\u0107 to tak:</p> <pre><code>* folder_projektu\n    * public\n        * index.php\n        * .htaccess\n    * src\n        * Controller\n        * Model\n        * View\n    * storage\n        * logs\n    * vendor\n</code></pre> <p>Teraz \"podstawowa\" wersja jest ju\u017c stworzona i mo\u017cna zacz\u0105\u0107 pisa\u0107 w\u0142asn\u0105 wirtyn\u0119.</p>"},{"location":"required/","title":"Wymagania","text":"<p>Aby uruchomi\u0107 framework wymagane jest:</p> <ul> <li>PHP &gt;= 8.2</li> <li>Composer</li> </ul>"},{"location":"documentation/config/","title":"Config","text":"Uwaga     Klasa Config traci wsparcie od wersji 0.1.7, w najbli\u017cszej wersji zostanie ca\u0142kowicie usuni\u0119ta, zamiast niej nale\u017cy u\u017cywa\u0107 $_ENV"},{"location":"documentation/config/#config","title":"Config","text":"<p>Klasa s\u0142u\u017cy do zarz\u0105dzania konfiguracj\u0105 aplikacji, umo\u017cliwiaj\u0105c \u0142adowanie, zapisywanie i pobieranie warto\u015bci konfiguracyjnych.</p>"},{"location":"documentation/config/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Config\n</code></pre>"},{"location":"documentation/config/#zmienne","title":"Zmienne","text":"<ul> <li>protected static array $config: Przechowuje wszystkie warto\u015bci konfiguracyjne jako tablica asocjacyjna.</li> </ul>"},{"location":"documentation/config/#metody","title":"Metody","text":""},{"location":"documentation/config/#get","title":"get","text":"<pre><code>public static function get(string $name, mixed $default = null): mixed\n</code></pre> <p>Pobiera warto\u015b\u0107 konfiguracji o podanej nazwie. Je\u015bli warto\u015b\u0107 nie istnieje, zwraca warto\u015b\u0107 domy\u015bln\u0105.</p>"},{"location":"documentation/config/#set","title":"set","text":"<pre><code>public static function set(string $name, string $value): void\n</code></pre> <p>Ustawia warto\u015b\u0107 konfiguracji o podanej nazwie.</p>"},{"location":"documentation/config/#loadfromenv","title":"loadFromEnv","text":"<pre><code>public static function loadFromEnv(string $filePath): bool\n</code></pre> <p>\u0141aduje konfiguracje z pliku \u015brodowiskowego. Zwraca <code>true</code> je\u015bli za\u0142adowanie si\u0119 powiod\u0142o, w przeciwnym razie <code>false</code>.</p>"},{"location":"documentation/config/#processenvcontent","title":"processEnvContent","text":"<pre><code>protected static function processEnvContent(string $content): void\n</code></pre> <p>Przetwarza pojedyncz\u0105 lini\u0119 pliku \u015brodowiskowego, parsuj\u0105c nazw\u0119 i warto\u015b\u0107, a nast\u0119pnie zapisuje je do tablicy konfiguracji.</p>"},{"location":"documentation/config/#parseenvvalue","title":"parseEnvValue","text":"<pre><code>protected static function parseEnvValue(mixed $value): mixed\n</code></pre> <p>Parsuje warto\u015b\u0107 podan\u0105 jako string do odpowiedniego typu danych, np. liczby, warto\u015bci logiczne, czy ci\u0105gi znak\u00f3w.</p>"},{"location":"documentation/controller/","title":"Controller","text":"<p>Kontroler odpowiada za odbieranie danych od u\u017cytkownika, decydowanie o tym, co zrobi\u0107 z tymi danymi, a nast\u0119pnie delegowanie zada\u0144 do odpowiednich modeli lub wy\u015bwietlanie odpowiednich widok\u00f3w.</p>"},{"location":"documentation/controller/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Controller\n</code></pre> <p>Abstract:</p> <pre><code>Nimblephp\\framework\\Abstracts\\AbstractController\n</code></pre>"},{"location":"documentation/controller/#zmienne","title":"Zmienne","text":"<ul> <li>public string $name: Nazwa za\u0142adowanego kontrolera.</li> <li>public string $action: Nazwa wywo\u0142anej akcji.</li> <li>public array $models: Lista za\u0142adowanych modeli.</li> <li>public ResponseInterface $response: Instancja <code>Response</code></li> <li>public RequestInterface $request: Instancja <code>Request</code></li> </ul>"},{"location":"documentation/controller/#metody","title":"Metody","text":""},{"location":"documentation/controller/#loadmodel","title":"loadModel","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Metoda loadModel s\u0142u\u017cy do \u0142adowania modelu na podstawie podanej nazwy.</p> <p>Po za\u0142adowaniu modelu znajduje si\u0119 on w tablicy <code>$models</code> oraz jest mo\u017cliwo\u015b\u0107 do odwo\u0142anai si\u0119 do niego za pomoc\u0105 zmiennej z CamelCase np.:</p> <pre><code>$this-&gt;loadModel('testowy_model');\n// odwo\u0142anie do modelu\n$this-&gt;TestowyModel-&gt;...\n</code></pre>"},{"location":"documentation/controller/#log","title":"log","text":"<pre><code>public function log(string $message, string $level = 'INFO', array $content = []): bool\n</code></pre> <p>Dodanie loga</p>"},{"location":"documentation/controller/#afterconstruct","title":"afterConstruct","text":"<pre><code>public function afterConstruct(): void\n</code></pre> <p>Metoda jest inicjowania po utworzeniu i skonfigurowaniu kontrolera w metodze loadController w Kernel</p>"},{"location":"documentation/cookie/","title":"Cookie","text":"<p>Cookie to komponent odpowiedzialny za zarz\u0105dzanie ciasteczkami w aplikacji. Zapewnia metody do ustawiania, pobierania, sprawdzania istnienia i usuwania ciasteczek, z mo\u017cliwo\u015bci\u0105 konfiguracji ich bezpiecze\u0144stwa i innych opcji.</p>"},{"location":"documentation/cookie/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Cookie\n</code></pre> <p>Interfejs:</p> <pre><code>Nimblephp\\framework\\Interfaces\\CookieInterface\n</code></pre>"},{"location":"documentation/cookie/#zmienne","title":"Zmienne","text":"<ul> <li>protected static bool $defaultSecure: Domy\u015blne ustawienie bezpiecznego przesy\u0142ania ciasteczek (true albo false).</li> <li>protected static bool $defaultHttpOnly: Domy\u015blne ustawienie dost\u0119pno\u015bci ciasteczka tylko przez HTTP (true albo false).</li> <li>protected static string $sameSite: Domy\u015blna polityka dla atrybutu SameSite ciasteczka ('Lax', 'Strict', lub 'None').</li> </ul>"},{"location":"documentation/cookie/#metody","title":"Metody","text":""},{"location":"documentation/cookie/#setsamesite","title":"setSameSite","text":"<pre><code>public static function setSameSite(string $sameSite): void\n</code></pre> <p>Ustawia polityk\u0119 SameSite dla ciasteczek.</p>"},{"location":"documentation/cookie/#setdefaultsecure","title":"setDefaultSecure","text":"<pre><code>public static function setDefaultSecure(bool $defaultSecure): void\n</code></pre> <p>Ustawia domy\u015blne bezpiecze\u0144stwo przesy\u0142ania ciasteczek.</p>"},{"location":"documentation/cookie/#setdefaulthttponly","title":"setDefaultHttpOnly","text":"<pre><code>public static function setDefaultHttpOnly(bool $defaultHttpOnly): void\n</code></pre> <p>Ustawia domy\u015blne ustawienie dost\u0119pno\u015bci ciasteczka tylko przez HTTP.</p>"},{"location":"documentation/cookie/#set","title":"set","text":"<pre><code>public function set(string $name, mixed $value, int $expire = 0, string $path = '/', string $domain = '', ?bool $secure = null, ?bool $httponly = false): void\n</code></pre> <p>Ustawia ciasteczko z okre\u015blon\u0105 nazw\u0105, warto\u015bci\u0105, czasem wyga\u015bni\u0119cia, \u015bcie\u017ck\u0105, domen\u0105, bezpiecze\u0144stwem i dost\u0119pno\u015bci\u0105 HTTP.</p>"},{"location":"documentation/cookie/#get","title":"get","text":"<pre><code>public function get(string $name): mixed\n</code></pre> <p>Pobiera warto\u015b\u0107 ciasteczka o danej nazwie, zwraca null je\u015bli ciasteczko nie istnieje.</p>"},{"location":"documentation/cookie/#exists","title":"exists","text":"<pre><code>public function exists(string $name): bool\n</code></pre> <p>Sprawdza, czy ciasteczko o podanej nazwie istnieje.</p>"},{"location":"documentation/cookie/#remove","title":"remove","text":"<pre><code>public function remove(string $name): void\n</code></pre> <p>Usuwa ciasteczko o podanej nazwie.</p>"},{"location":"documentation/kernel/","title":"Kernel","text":"<p>Kernel to g\u0142\u00f3wny komponent systemu, kt\u00f3ry koordynuje og\u00f3lne operacje aplikacji, takie jak obs\u0142uga \u017c\u0105da\u0144, routing, inicjalizacja konfiguracji i zarz\u0105dzanie po\u0142\u0105czeniami z baz\u0105 danych. Stanowi centralny punkt zarz\u0105dzania przep\u0142ywem aplikacji.</p>"},{"location":"documentation/kernel/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Kernel\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\KernelInterface\n</code></pre>"},{"location":"documentation/kernel/#zmienne","title":"Zmienne","text":"<ul> <li>public static string $projectPath: Podstawowa \u015bcie\u017cka katalogu projektu.</li> <li>protected RouteInterface $router: Instancja routera obs\u0142uguj\u0105cego routing \u017c\u0105dania.</li> <li>protected RequestInterface $request: Instancja zarz\u0105dzaj\u0105ca \u017c\u0105daniami.</li> <li>protected ResponseInterface $response: Instancja zarz\u0105dzaj\u0105ca odpowiedziami.</li> <li>protected MiddlewareInterface $middleware: Instancja middleware.</li> </ul>"},{"location":"documentation/kernel/#metody","title":"Metody","text":""},{"location":"documentation/kernel/#konstruktor","title":"Konstruktor","text":"<pre><code>public function __construct(RouteInterface $router)\n</code></pre> <p>Inicjalizuje Kernel z podanym routerem, \u017c\u0105daniem i odpowiedzi\u0105. Ustawia tak\u017ce podstawow\u0105 \u015bcie\u017ck\u0119 projektu.</p>"},{"location":"documentation/kernel/#getprojectpath","title":"getProjectPath","text":"<pre><code>protected function getProjectPath(): string\n</code></pre> <p>Zwraca rzeczywist\u0105 \u015bcie\u017ck\u0119 katalogu projektu.</p>"},{"location":"documentation/kernel/#handle","title":"handle","text":"<pre><code>public function handle(): void\n</code></pre> <p>Uruchamia aplikacj\u0119, wykonuj\u0105c kolejno metod\u0119 bootstrap oraz loadController. Obs\u0142uguje tak\u017ce wyj\u0105tki zg\u0142aszane w tych metodach.</p>"},{"location":"documentation/kernel/#loadconfiguration","title":"loadConfiguration","text":"<pre><code>public function loadConfiguration(): void\n</code></pre> <p>\u0141aduje konfiguracj\u0119 z plik\u00f3w .env, obs\u0142uguj\u0105c zar\u00f3wno domy\u015bln\u0105 konfiguracj\u0119 jak i specyficzn\u0105 dla \u015brodowiska.</p>"},{"location":"documentation/kernel/#bootstrap","title":"bootstrap","text":"<pre><code>protected function bootstrap(): void\n</code></pre> <p>Inicjuje sesj\u0119, \u0142\u0105czy z baz\u0105 danych i wykonuje auto-loader klas.</p>"},{"location":"documentation/kernel/#bootstrap_1","title":"bootstrap","text":"<pre><code>protected function errorCatcher(): void\n</code></pre> <p>Metoda ma wy\u0142apywa\u0107 i zapisywa\u0107 do log\u00f3w b\u0142\u0119dy</p>"},{"location":"documentation/kernel/#autocreator","title":"autoCreator","text":"<pre><code>protected function autoCreator(): void\n</code></pre> <p>Tworzy niezb\u0119dne katalogi w projekcie, je\u015bli nie istniej\u0105.</p>"},{"location":"documentation/kernel/#initializesession","title":"initializeSession","text":"<pre><code>protected function initializeSession(): void\n</code></pre> <p>Inicjalizuje sesj\u0119 u\u017cytkownika.</p>"},{"location":"documentation/kernel/#connecttodatabase","title":"connectToDatabase","text":"<pre><code>protected function connectToDatabase(): void\n</code></pre> <p>\u0141\u0105czy z baz\u0105 danych, u\u017cywaj\u0105c konfiguracji z plik\u00f3w .env.</p>"},{"location":"documentation/kernel/#autoloader","title":"autoloader","text":"<pre><code>protected function autoloader(): void\n</code></pre> <p>Auto-loader dla klas projektu, \u0142aduje klasy na podstawie namespace.</p>"},{"location":"documentation/kernel/#loadcontroller","title":"loadController","text":"<pre><code>protected function loadController(): void\n</code></pre> <p>\u0141aduje i wykonuje kontroler na podstawie danych z routera.</p>"},{"location":"documentation/kernel/#handleexception","title":"handleException","text":"<pre><code>protected function handleException(Throwable $exception): void\n</code></pre> <p>Obs\u0142uguje wyj\u0105tki zg\u0142aszane podczas dzia\u0142ania aplikacji, loguj\u0105c je i w zale\u017cno\u015bci od konfiguracji, wy\u015bwietlaj\u0105c informacje o b\u0142\u0119dzie.</p>"},{"location":"documentation/kernel/#debug","title":"debug","text":"<pre><code>protected function debug(): void\n</code></pre> <p>Ustawienia dotycz\u0105ce wy\u015bwietlania b\u0142\u0119d\u00f3w, je\u015bli opcja debugowania jest w\u0142\u0105czona.</p>"},{"location":"documentation/kernel/#loadmodules","title":"loadModules","text":"<pre><code>protected function loadModules(): void\n</code></pre> <p>Za\u0142adowywanie oraz pocz\u0105tkowa inicjalizacja modu\u0142\u00f3w</p>"},{"location":"documentation/log/","title":"Log","text":"<p>Klasa s\u0142u\u017cy do logowania zdarze\u0144 w aplikacji.</p>"},{"location":"documentation/log/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Log\n</code></pre>"},{"location":"documentation/log/#zmienne","title":"Zmienne","text":"<ul> <li>public static string $session: Unikatowy identyfikator sesji, generowany dla ka\u017cdej sesji logowania.</li> </ul>"},{"location":"documentation/log/#metody","title":"Metody","text":""},{"location":"documentation/log/#log_1","title":"log","text":"<pre><code>public static function log(string $message, string $level = 'INFO', array $content = []): bool\n</code></pre> <p>Metoda do zapisywania log\u00f3w. Pozwala na zapisanie wiadomo\u015bci logu, poziomu logowania oraz dodatkowych tre\u015bci. Log jest zapisywany tylko je\u015bli w konfiguracji aplikacji w\u0142\u0105czone jest logowanie. Generuje unikatowy identyfikator sesji, je\u015bli nie istnieje. Formatuje i zapisuje dane logu w pliku JSON w katalogu log\u00f3w projektu. Zwraca <code>true</code>, je\u015bli zapis si\u0119 powi\u00f3d\u0142, lub <code>false</code> w przypadku niepowodzenia.</p>"},{"location":"documentation/middleware/","title":"Middleware","text":"<p>Klasa \u0142aduj\u0105ce skrypty u\u017cytkownika do kernel'a</p>"},{"location":"documentation/middleware/#uzywanie-klasy","title":"U\u017cywanie klasy","text":"<p>Aby u\u017cy\u0107 klasy nale\u017cy w g\u0142\u00f3wnym folderze utworzy\u0107 plik Middleware.php o nast\u0119puj\u0105cym szablonie klasy:</p> <pre><code>&lt;?php\n\nclass Middleware extends \\Nimblephp\\framework\\Middleware\n{\n\n}\n</code></pre> <p>lub z interfejsu</p> <pre><code>class Middleware implements \\Nimblephp\\framework\\Interfaces\\MiddlewareInterface\n{\n\n    public function afterBootstrap()\n    {\n    }\n\n    public function beforeController(string $controllerName, string $action, array $params)\n    {\n    }\n\n    public function afterController(string $controllerName, string $action, array $params)\n    {\n    }\n\n    public function handleException(Throwable $exception)\n    {\n    }\n\n}\n</code></pre>"},{"location":"documentation/middleware/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Middleware\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\MiddlewareInterface\n</code></pre>"},{"location":"documentation/middleware/#metody","title":"Metody","text":""},{"location":"documentation/middleware/#afterbootstrap","title":"afterBootstrap","text":"<pre><code>public function afterBootstrap()\n</code></pre> <p>Kod wykonywany po za\u0142adowaniu kodu przez bootstrap</p>"},{"location":"documentation/middleware/#beforecontroller","title":"beforeController","text":"<pre><code>public function beforeController(string $controllerName, string $action, array $params)\n</code></pre> <p>Kod wykonywany przed za\u0142adowaniem kontrolera</p>"},{"location":"documentation/middleware/#aftercontroller","title":"afterController","text":"<pre><code>public function afterController(string $controllerName, string $action, array $params)\n</code></pre> <p>Kod wykonywany po za\u0142adowaniu kontrolera</p>"},{"location":"documentation/middleware/#handleexception","title":"handleException","text":"<pre><code>public function handleException(Throwable $exception)\n</code></pre> <p>Kod wykonuje si\u0119 na ko\u0144cu handleException, po zapisaniu logu</p>"},{"location":"documentation/model/","title":"Model","text":"<p>Model to g\u0142\u00f3wna cz\u0119\u015b\u0107 systemu odpowiadaj\u0105ca za logik\u0119 biznesow\u0105 i zarz\u0105dzanie danymi. Jego zadaniem jest przechowywanie danych, ich przetwarzanie i dostarczanie ich w odpowiedniej formie do kontrolera.</p>"},{"location":"documentation/model/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Model\n</code></pre> <p>Abstract:</p> <pre><code>Nimblephp\\framework\\Abstracts\\AbstractModel\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ModelInterface\n</code></pre>"},{"location":"documentation/model/#zmienne","title":"Zmienne","text":"<ul> <li>public null|string|false $useTable: Nazwa tabeli w bazie danych u\u017cywana przez model, <code>null</code> oznacza automatyczne ustalenie nazwy, <code>false</code> deaktywuje dzia\u0142anie z baz\u0105 danych.</li> <li>public string $name: Nazwa modelu.</li> <li>public array $models: Lista za\u0142adowanych modeli.</li> <li>public ControllerInterface $controller: Instancja kontrolera kt\u00f3ry za\u0142adowa\u0142 model</li> <li>protected Table $table: Instancja tabeli obs\u0142uguj\u0105cej operacje na bazie danych.</li> <li>protected ?int $id: Aktualne ID elementu w bazie danych.</li> </ul>"},{"location":"documentation/model/#metody","title":"Metody","text":""},{"location":"documentation/model/#create","title":"create","text":"<pre><code>public function create(array $data): bool\n</code></pre> <p>Tworzy nowy rekord w bazie danych na podstawie dostarczonych danych. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#read","title":"read","text":"<pre><code>public function read(?array $condition = null, ?array $columns = null, ?string $orderBy = null): array\n</code></pre> <p>Zwraca pojedynczy rekord na podstawie podanych warunk\u00f3w. Rzuca <code>DatabaseException</code> przy b\u0142\u0119dzie.</p>"},{"location":"documentation/model/#readall","title":"readAll","text":"<pre><code>public function readAll(?array $condition = null, ?array $columns = null, ?string $orderBy = null, ?string $limit = null, ?string $groupBy = null): array\n</code></pre> <p>Zwraca list\u0119 rekord\u00f3w spe\u0142niaj\u0105cych podane warunki. Rzuca <code>DatabaseException</code> przy b\u0142\u0119dzie.</p>"},{"location":"documentation/model/#update","title":"update","text":"<pre><code>public function update(array $data): bool\n</code></pre> <p>Aktualizuje rekord o danym ID, u\u017cywaj\u0105c dostarczonych danych. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#delete","title":"delete","text":"<pre><code>public function delete(): bool\n</code></pre> <p>Usuwa rekord o danym ID. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#count","title":"count","text":"<pre><code>public function count(?array $condition = null, ?string $groupBy = null): int\n</code></pre> <p>Zliczenie ilo\u015bci rekord\u00f3w. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#isset","title":"isset","text":"<pre><code>public function isset(?array $condition = null): int\n</code></pre> <p>Weryfikacja czy element istnieje. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#query","title":"query","text":"<pre><code>public function query(?string $sql): array\n</code></pre> <p>Wykonanie kodu SQL. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#getid","title":"getId","text":"<pre><code>public function getId(): ?int\n</code></pre> <p>Zwraca ID aktualnie zarz\u0105dzanego elementu.</p>"},{"location":"documentation/model/#setid","title":"setId","text":"<pre><code>public function setId(?int $id = null): ModelInterface\n</code></pre> <p>Ustawia ID dla aktualnie zarz\u0105dzanego elementu, zwraca sam\u0105 siebie.</p>"},{"location":"documentation/model/#preparetableinstance","title":"prepareTableInstance","text":"<pre><code>public function prepareTableInstance(): void\n</code></pre> <p>Przygotowuje instancj\u0119 tabeli, na kt\u00f3rej b\u0119d\u0105 wykonywane operacje.</p>"},{"location":"documentation/model/#gettableinstance","title":"getTableInstance","text":"<pre><code>public function getTableInstance(): Table\n</code></pre> <p>Pobranie instancji tabeli</p>"},{"location":"documentation/model/#loadmodel","title":"loadModel","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Metoda loadModel s\u0142u\u017cy do \u0142adowania modelu na podstawie podanej nazwy.</p> <p>Po za\u0142adowaniu modelu znajduje si\u0119 on w tablicy <code>$models</code> oraz jest mo\u017cliwo\u015b\u0107 do odwo\u0142anai si\u0119 do niego za pomoc\u0105 zmiennej z CamelCase np.:</p> <pre><code>$this-&gt;loadModel('testowy_model');\n// odwo\u0142anie do modelu\n$this-&gt;TestowyModel-&gt;...\n</code></pre>"},{"location":"documentation/model/#log","title":"log","text":"<pre><code>public function log(string $message, string $level = 'INFO', array $content = []): bool\n</code></pre> <p>Dodanie loga</p>"},{"location":"documentation/moduleRegister/","title":"ModuleRegister","text":"<p>Do uzupe\u0142nienia</p>"},{"location":"documentation/request/","title":"Request","text":"<p>Klasa s\u0142u\u017cy do obs\u0142ugi \u017c\u0105da\u0144 HTTP.</p>"},{"location":"documentation/request/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Request\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\RequestInterface\n</code></pre>"},{"location":"documentation/request/#zmienne","title":"Zmienne","text":"<ul> <li>private array $query: Dane przes\u0142ane metod\u0105 GET.</li> <li>private array $post: Dane przes\u0142ane metod\u0105 POST.</li> <li>private array $cookies: Ciasteczka HTTP \u017c\u0105dania.</li> <li>private array $files: Pliki przes\u0142ane w ramach \u017c\u0105dania.</li> <li>private array $headers: Nag\u0142\u00f3wki HTTP \u017c\u0105dania.</li> <li>private array $server: Informacje o serwerze i \u015brodowisku wykonania \u017c\u0105dania.</li> </ul>"},{"location":"documentation/request/#metody","title":"Metody","text":""},{"location":"documentation/request/#__construct","title":"__construct","text":"<pre><code>__construct()\n</code></pre> <p>Konstruktor klasy, inicjalizuje zmienne przechowuj\u0105ce dane \u017c\u0105dania.</p>"},{"location":"documentation/request/#getallheaders","title":"getAllHeaders","text":"<pre><code>private function getAllHeaders(): array\n</code></pre> <p>Pobiera wszystkie nag\u0142\u00f3wki HTTP \u017c\u0105dania.</p>"},{"location":"documentation/request/#getquery","title":"getQuery","text":"<pre><code>public function getQuery($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci przekazanej metod\u0105 GET.</p>"},{"location":"documentation/request/#getpost","title":"getPost","text":"<pre><code>public function getPost($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci przekazanej metod\u0105 POST.</p>"},{"location":"documentation/request/#getcookie","title":"getCookie","text":"<pre><code>public function getCookie($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci ciasteczka.</p>"},{"location":"documentation/request/#getfile","title":"getFile","text":"<pre><code>public function getFile($key): mixed\n</code></pre> <p>Pobranie przes\u0142anego pliku.</p>"},{"location":"documentation/request/#getheader","title":"getHeader","text":"<pre><code>public function getHeader($key): mixed\n</code></pre> <p>Pobranie warto\u015bci nag\u0142\u00f3wka.</p>"},{"location":"documentation/request/#getmethod","title":"getMethod","text":"<pre><code>public function getMethod(): string\n</code></pre> <p>Pobranie metody HTTP \u017c\u0105dania.</p>"},{"location":"documentation/request/#geturi","title":"getUri","text":"<pre><code>public function getUri(): string\n</code></pre> <p>Pobranie URI \u017c\u0105dania.</p>"},{"location":"documentation/request/#getserver","title":"getServer","text":"<pre><code>public function getServer($key, $default = null): mixed\n</code></pre> <p>Pobranie informacji o serwerze lub \u015brodowisku.</p>"},{"location":"documentation/request/#getbody","title":"getBody","text":"<pre><code>public function getBody(): string\n</code></pre> <p>Zwraca otrzymane body</p>"},{"location":"documentation/response/","title":"Response","text":"<p>Klasa s\u0142u\u017cy do obs\u0142ugi odpowiedzi HTTP.</p>"},{"location":"documentation/response/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Response\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ResponseInterface\n</code></pre>"},{"location":"documentation/response/#zmienne","title":"Zmienne","text":"<ul> <li>protected mixed $content: Tre\u015b\u0107 odpowiedzi, mo\u017ce by\u0107 r\u00f3\u017cnego typu.</li> <li>protected int $statusCode = 200: Kod statusu HTTP odpowiedzi, domy\u015blnie 200.</li> <li>protected array $headers = []: Tablica nag\u0142\u00f3wk\u00f3w HTTP odpowiedzi.</li> <li>protected string $statusText = '': Tekstowy opis kodu statusu HTTP.</li> </ul>"},{"location":"documentation/response/#metody","title":"Metody","text":""},{"location":"documentation/response/#__construct","title":"__construct","text":"<pre><code>__construct()\n</code></pre> <p>Konstruktor klasy, nie jest zdefiniowany w podanym kodzie.</p>"},{"location":"documentation/response/#getcontent","title":"getContent","text":"<pre><code>public function getContent(): string\n</code></pre> <p>Pobranie tre\u015bci odpowiedzi.</p>"},{"location":"documentation/response/#setcontent","title":"setContent","text":"<pre><code>public function setContent(mixed $content): void\n</code></pre> <p>Ustawienie tre\u015bci odpowiedzi.</p>"},{"location":"documentation/response/#getstatuscode","title":"getStatusCode","text":"<pre><code>public function getStatusCode(): int\n</code></pre> <p>Pobranie kodu statusu HTTP.</p>"},{"location":"documentation/response/#setstatuscode","title":"setStatusCode","text":"<pre><code>public function setStatusCode(int $code, string $text = ''): void\n</code></pre> <p>Ustawienie kodu statusu HTTP i opcjonalnie tekstowego opisu.</p>"},{"location":"documentation/response/#addheader","title":"addHeader","text":"<pre><code>public function addHeader(string $name, string $value): void\n</code></pre> <p>Dodanie nag\u0142\u00f3wka HTTP do odpowiedzi.</p>"},{"location":"documentation/response/#send","title":"send","text":"<pre><code>public function send(): void\n</code></pre> <p>Wys\u0142anie odpowiedzi do klienta, wraz z nag\u0142\u00f3wkami i tre\u015bci\u0105.</p>"},{"location":"documentation/response/#redirect","title":"redirect","text":"<pre><code>public function redirect(string $url, int $statusCode = 302): never\n</code></pre> <p>Przekierowanie na inn\u0105 stron\u0119</p>"},{"location":"documentation/route/","title":"Route","text":"<p>Klasa s\u0142u\u017cy do interpretacji \u017c\u0105da\u0144 URL.</p>"},{"location":"documentation/route/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Route\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\RouteInterface\n</code></pre>"},{"location":"documentation/route/#zmienne","title":"Zmienne","text":"<ul> <li>protected ?string $controller': Nazwa kontrolera.</li> <li>protected ?string $method: Nazwa metody.</li> <li>protected array $params = []: Parametry.</li> </ul>"},{"location":"documentation/route/#zmienne-statyczne","title":"Zmienne statyczne","text":"<ul> <li>protected static array $routes = []: Predefiniowane routingi</li> </ul>"},{"location":"documentation/route/#metody-statyczne","title":"Metody statyczne","text":""},{"location":"documentation/route/#addroute","title":"addRoute","text":"<pre><code>public static function addRoute(string $name, ?string $controller = null, ?string $method = null): void\n</code></pre> <p>Dodanie predefiniowanych routing\u00f3w</p>"},{"location":"documentation/route/#metody","title":"Metody","text":""},{"location":"documentation/route/#__construct","title":"__construct","text":"<pre><code>__construct(RequestInterface $request)\n</code></pre> <p>Tworzenie instancji routingu.</p>"},{"location":"documentation/route/#getcontroller","title":"getController","text":"<pre><code>public function getController(): string\n</code></pre> <p>Pobranie nazwy kontrolera.</p>"},{"location":"documentation/route/#setcontroller","title":"setController","text":"<pre><code>public function setController(?string $controller): void\n</code></pre> <p>Zmiana nazwy kontrolera.</p>"},{"location":"documentation/route/#getmethod","title":"getMethod","text":"<pre><code>public function getMethod(): string\n</code></pre> <p>Pobranie nazwy metody.</p>"},{"location":"documentation/route/#setmethod","title":"setMethod","text":"<pre><code>public function setMethod(?string $method): void\n</code></pre> <p>Zmiana nazwy metody.</p>"},{"location":"documentation/route/#getparams","title":"getParams","text":"<pre><code>public function getParams(): array\n</code></pre> <p>Pobranie parametr\u00f3w.</p>"},{"location":"documentation/route/#setparams","title":"setParams","text":"<pre><code>public function setParams(array $params): void\n</code></pre> <p>Zmiana parametr\u00f3w.</p>"},{"location":"documentation/route/#reload","title":"reload","text":"<pre><code>public function reload(): void\n</code></pre> <p>Prze\u0142adowanie routingu w celu zastosowanie predefiniowanych routing\u00f3w</p>"},{"location":"documentation/session/","title":"Session","text":"<p>Session to klasa odpowiedzialna za zarz\u0105dzanie sesjami u\u017cytkownik\u00f3w. Umo\u017cliwia inicjalizacj\u0119 sesji, a tak\u017ce ustawianie, pobieranie, sprawdzanie istnienia, usuwanie oraz niszczenie danych sesji.</p>"},{"location":"documentation/session/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Session\n</code></pre> <p>Interfejs:</p> <pre><code>Nimblephp\\framework\\Interfaces\\SessionInterface\n</code></pre>"},{"location":"documentation/session/#metody","title":"Metody","text":""},{"location":"documentation/session/#konstruktor","title":"Konstruktor","text":"<pre><code>public function __construct()\n</code></pre> <p>Inicjalizuje sesj\u0119, je\u015bli jeszcze nie zosta\u0142a uruchomiona.</p>"},{"location":"documentation/session/#set","title":"set","text":"<pre><code>public function set($key, $value): void\n</code></pre> <p>Ustawia warto\u015b\u0107 w sesji pod okre\u015blonym kluczem.</p>"},{"location":"documentation/session/#get","title":"get","text":"<pre><code>public function get($key): mixed\n</code></pre> <p>Pobiera warto\u015b\u0107 z sesji dla podanego klucza, zwraca null je\u015bli klucz nie istnieje.</p>"},{"location":"documentation/session/#exists","title":"exists","text":"<pre><code>public function exists($key): bool\n</code></pre> <p>Sprawdza, czy w sesji istnieje warto\u015b\u0107 przypisana do danego klucza.</p>"},{"location":"documentation/session/#remove","title":"remove","text":"<pre><code>public function remove($key): void\n</code></pre> <p>Usuwa element z sesji pod okre\u015blonym kluczem.</p>"},{"location":"documentation/session/#destroy","title":"destroy","text":"<pre><code>public function destroy(): void\n</code></pre> <p>Niszczy wszystkie dane sesji i ko\u0144czy sesj\u0119.</p>"},{"location":"documentation/session/#regenerate","title":"regenerate","text":"<pre><code>public function regenerate(?bool $removeOldSession = false): void\n</code></pre> <p>Regeneruje ID sesji, opcjonalnie usuwaj\u0105c stare dane sesji.</p>"},{"location":"documentation/view/","title":"View","text":"<p>Wskaz\u00f3wka: Domy\u015blny widok opiera si\u0119 na plikach phtml. Je\u015bli potrzebujesz bardziej zaawansowanych widok\u00f3w, wkr\u00f3tce pojawi si\u0119 instrukcja i kod dla twig i innych.</p> <p>Widok odpowiada za prezentacj\u0119 danych u\u017cytkownikowi. Jest to komponent, kt\u00f3ry wy\u015bwietla dane, kt\u00f3re otrzymuje z kontrolera, zazwyczaj w postaci graficznego interfejsu u\u017cytkownika.</p>"},{"location":"documentation/view/#alternawywy","title":"Alternawywy","text":"<ul> <li>Twig</li> </ul>"},{"location":"documentation/view/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\View\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ViewInterface\n</code></pre>"},{"location":"documentation/view/#zmienne","title":"Zmienne","text":"<ul> <li>protected string $viewPath = '/src/View/': \u015acie\u017cka do folderu z widokami.</li> <li>protected int $responseCode = 200: Kod odpowiedzi.</li> </ul>"},{"location":"documentation/view/#metody","title":"Metody","text":""},{"location":"documentation/view/#setresponsecode","title":"setResponseCode","text":"<pre><code>public function setResponseCode(int $responseCode): void\n</code></pre> <p>Definiowanie kodu odpowiedzi.</p>"},{"location":"documentation/view/#render","title":"render","text":"<pre><code>public function render(string $viewName, array $data = []): void\n</code></pre> <p>Renderowanie widoku na podstawie nazwy widoku i dostarczonych danych.</p>"},{"location":"extension/form/form/","title":"Form","text":"<p>Generowanie formularzy</p>"},{"location":"extension/form/form/#namespace","title":"Namespace","text":"<pre><code>Nimblephp\\form\n</code></pre>"},{"location":"extension/form/form/#zmienne","title":"Zmienne","text":"<ul> <li>protected array $fields = [] : Tablica p\u00f3l formularza.</li> <li>protected MethodEnum $method = MethodEnum::POST: Metoda HTTP formularza, domy\u015blnie POST.</li> <li>protected ?string $action = null: Adres URL docelowy formularza.</li> <li>protected ?string $id = null: Identyfikator formularza.</li> <li>protected Request $request: Instancja \u017c\u0105dania HTTP.</li> <li>protected array $data = []: Dane wej\u015bciowe formularza.</li> <li>protected bool $addLinebreak = true: Czy dodawa\u0107 znacznik prze\u0142amania linii po ka\u017cdym polu.</li> <li>protected array $validationErrors = []: Tablica b\u0142\u0119d\u00f3w walidacji.</li> <li>protected bool $addFormNode = true: Dodanie noda <code>form</code></li> </ul>"},{"location":"extension/form/form/#metody","title":"Metody","text":""},{"location":"extension/form/form/#__construct","title":"__construct","text":"<pre><code>public function __construct(?string $action = null, MethodEnum $method = MethodEnum::POST)\n</code></pre> <p>Inicjalizacja formularza z opcjonalnymi parametrami $action i $method.</p>"},{"location":"extension/form/form/#validation","title":"validation","text":"<pre><code>public function validation(array $validations = []): bool\n</code></pre> <p>Walidacja danych formularza zgodnie z zasadami przekazanymi jako tablica.</p>"},{"location":"extension/form/form/#addfield","title":"addField","text":"<pre><code>public function addField(string $type, ?string $name, ?string $title, array $attributes = [], array $options = []): self\n</code></pre> <p>Dodawanie nowego pola do formularza z okre\u015blonymi atrybutami i opcjami.</p>"},{"location":"extension/form/form/#addinput","title":"addInput","text":"<pre><code>public function addInput(string $name, ?string $title = null, array $attributes = []): self\n</code></pre> <p>Dodawanie standardowego pola tekstowego.</p>"},{"location":"extension/form/form/#addfloatinput","title":"addFloatInput","text":"<pre><code>public function addFloatInput(string $name, ?string $title = null, array $attributes = []): self\n</code></pre> <p>Dodawanie standardowego pola <code>number</code>.</p>"},{"location":"extension/form/form/#addinputhidden","title":"addInputHidden","text":"<pre><code>public function addInputHidden(string $name, string $value): self\n</code></pre> <p>Dodawanie ukrytego pola tekstowego.</p>"},{"location":"extension/form/form/#addtextarea","title":"addTextarea","text":"<pre><code>public function addTextarea(string $name, ?string $title = null, array $attributes = []): self\n</code></pre> <p>Dodawanie pola tekstowego typu textarea.</p>"},{"location":"extension/form/form/#addselect","title":"addSelect","text":"<pre><code>public function addSelect(string $name, array $options, ?string $selectedKey = null, ?string $title = null, array $attributes = []): self\n</code></pre> <p>Tworzenie pola typu select z przekazanymi opcjami.</p>"},{"location":"extension/form/form/#render","title":"render","text":"<pre><code>public function render(): string\n</code></pre> <p>Generowanie HTML formularza.</p>"},{"location":"extension/form/form/#setid-getid","title":"setId, getId","text":"<pre><code>public function setId(?string $id): void\npublic function getId(): ?string\n</code></pre> <p>Ustawianie i pobieranie identyfikatora formularza.</p>"},{"location":"extension/form/form/#onsubmit","title":"onSubmit","text":"<pre><code>public function onSubmit(): bool\n</code></pre> <p>Obs\u0142uga zdarzenia wys\u0142ania formularza.</p>"},{"location":"extension/form/form/#renderfield","title":"renderField","text":"<pre><code>protected function renderField(array $field): string\n</code></pre> <p>Generowanie pola</p>"},{"location":"extension/form/form/#generateattributes","title":"generateAttributes","text":"<pre><code>protected function generateAttributes(array $attributes): string\n</code></pre> <p>Generowanie atrybut\u00f3w html</p>"},{"location":"extension/form/form/#generatename","title":"generateName","text":"<pre><code>protected function generateName(string $name, string $prefix = ''): string\n</code></pre> <p>Generowanie nazwy</p>"},{"location":"extension/form/form/#generateid","title":"generateId","text":"<pre><code>protected function generateId(string $name): string\n</code></pre> <p>Generowanie ID</p>"},{"location":"extension/form/form/#zapisanie-danych","title":"Zapisanie danych","text":"<pre><code>protected function setData(array $data): void\n</code></pre> <p>Zapisanie danych</p>"},{"location":"extension/form/form/#getdatabykey","title":"getDataByKey","text":"<pre><code>protected function getDataByKey(?string $name): ?string\n</code></pre> <p>Pobranie danych formularza po kluczu (nazwie)</p>"},{"location":"extension/form/form/#preparedata","title":"prepareData","text":"<pre><code>protected function prepareData(): bool\n</code></pre> <p>Przygotowanie danych</p>"},{"location":"extension/form/form_bootstrap/","title":"Form","text":"<p>Generowanie formularzy dla bootstrap</p> <p>Zawiera wszystkie metody z klasy form oraz dodatkowe opisane poni\u017cej</p>"},{"location":"extension/form/form_bootstrap/#namespace","title":"Namespace","text":"<pre><code>Nimblephp\\form\n</code></pre>"},{"location":"extension/form/form_bootstrap/#zmienne","title":"Zmienne","text":"<ul> <li>protected bool $group = false : Grupowanie p\u00f3l</li> <li>protected ?int $col = null: Informacje dla grupowania p\u00f3l</li> </ul>"},{"location":"extension/form/form_bootstrap/#metody","title":"Metody","text":""},{"location":"extension/form/form_bootstrap/#validation","title":"validation","text":"<pre><code>public function title(string $title): self\n</code></pre> <p>Tytu\u0142 formularza</p>"},{"location":"extension/form/form_bootstrap/#__construct","title":"__construct","text":"<pre><code>public function startGroup(int $col = 6): self\npublic function stopGroup(): self\n</code></pre> <p>Rozpocz\u0119cie oraz zako\u0144czenie grupy p\u00f3l</p>"},{"location":"extension/form/start/","title":"Migracje","text":"<p>Form to biblioteka umo\u017cliwiaj\u0105ca tworzenie i walidowania formularzy</p>"},{"location":"extension/form/start/#instalacja","title":"Instalacja","text":"<pre><code>composer require nimblephp/form\n</code></pre>"},{"location":"extension/form/start/#uzycie","title":"U\u017cycie","text":"<p>W kontrolerze utw\u00f3rz skrypt generuj\u0105cy formularz np.:</p> <pre><code>$form = new FormBootstrap();\n$form-&gt;setId('test_form');\n$form-&gt;addInput('name/name', 'Title');\n$form-&gt;addTextarea('name/textarea', 'Textarea', ['value' =&gt; 'xxx']);\n$form-&gt;addField('checkbox', 'name/checkbox', 'Checkbox');\n$form-&gt;addSelect('name/select', ['a' =&gt; 1, 'b' =&gt; 2, 'c' =&gt; 3, 'd' =&gt; 4, 'e' =&gt; 5]);\n$form-&gt;addSubmitButton('Submit');\n\nif ($form-&gt;onSubmit()) {\n    var_dump('Submit form');\n}\n\necho $form-&gt;render();\n</code></pre>"},{"location":"extension/form/start/#inne-szablony","title":"Inne szablony","text":"<ol> <li>Bootstrap 5 <p>Aby wykorzysta\u0107 z gotowej biblioteki dzia\u0142aj\u0105cej pod bootstrap nale\u017cy u\u017cy\u0107 klasy <code>FormBootstrap</code></p> </li> </ol>"},{"location":"extension/form/start/#walidacje","title":"Walidacje","text":"<p>Walidacje generowane s\u0105 w nast\u0119puj\u0105cy spos\u00f3b:</p> <pre><code>$form = new Form();\n$form-&gt;addInput('name/name', 'Title');\n$form-&gt;validation([\n    'name/name' =&gt; [\n        'required',\n        function($value) {\n            if ($value !== 'test') {\n                throw new ValidationException('Custom validation');\n            }\n        }\n    ]\n]);\n</code></pre> <p>Teraz przy wywo\u0142aniu formularza walidacja zostanie wy\u015bwietlona</p>"},{"location":"extension/form/start/#predefiniowane-opcje","title":"Predefiniowane opcje:","text":"<pre><code>[\n'required'\n]\n</code></pre> <p>Pole wymagane</p> <pre><code>[\n    length =&gt; ['min' =&gt; 5, 'max' =&gt; 55]\n]\n</code></pre> <p>D\u0142ugo\u015b\u0107 pola, min i max jest niewymagane, mo\u017cna u\u017cywa\u0107 np. tylko min w celu ograniczenia tylko minimalnej ilo\u015bci znak\u00f3w</p>"},{"location":"extension/form/start/#zmiana-jezyka","title":"Zmiana j\u0119zyka","text":"<p>Dost\u0119pne j\u0119zyki: EN (domy\u015blnie), PL</p> <pre><code>Form::changeLanguage('PL');\n</code></pre>"},{"location":"extension/migrations/abstractMigration/","title":"AbstractMigration","text":"<p>Klasa dziedziczona przez skrypty migracyjne</p>"},{"location":"extension/migrations/abstractMigration/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\migrations\\AbstractMigration\n</code></pre> <p>Interfejs:</p> <pre><code>Nimblephp\\migrations\\Interfaces\\MigrationInterface\n</code></pre>"},{"location":"extension/migrations/abstractMigration/#zmienne","title":"Zmienne","text":"<ul> <li>public ControllerInterface $controller: Klasa kontrolera</li> </ul>"},{"location":"extension/migrations/abstractMigration/#metody","title":"Metody","text":""},{"location":"extension/migrations/abstractMigration/#setsamesite","title":"setSameSite","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Za\u0142adowanie modelu</p>"},{"location":"extension/migrations/migrations/","title":"Migrations","text":"<p>Klasa zarz\u0105dza procesem migracji bazy danych.</p>"},{"location":"extension/migrations/migrations/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\migrations\\Migrations\n</code></pre>"},{"location":"extension/migrations/migrations/#wasciwosci","title":"W\u0142a\u015bciwo\u015bci","text":"<ul> <li>$projectPath: \u015acie\u017cka do projektu.</li> <li>$migrationsPath: \u015acie\u017cka do katalogu migracji.</li> <li>$migrationList: Lista plik\u00f3w migracji.</li> <li>$migrationTable: Instancja tabeli migracji.</li> </ul>"},{"location":"extension/migrations/migrations/#konstruktor","title":"Konstruktor","text":"<pre><code>public function __construct(string $projectPath)\n</code></pre> <p>Inicjalizuje \u015bcie\u017cki i konfiguracje, \u0142\u0105czy z baz\u0105 danych, inicjuje tabel\u0119 migracji.</p>"},{"location":"extension/migrations/migrations/#metody","title":"Metody","text":""},{"location":"extension/migrations/migrations/#runmigrations","title":"runMigrations","text":"<pre><code>public function runMigrations(): void\n</code></pre> <p>Uruchamia wszystkie migracje zdefiniowane w katalogu migracji.</p>"},{"location":"extension/migrations/migrations/#checkmigrations","title":"checkMigrations","text":"<pre><code>protected function checkMigrations(): void\n</code></pre> <p>Sprawdza status istniej\u0105cych migracji, rzuca wyj\u0105tki w przypadku b\u0142\u0119d\u00f3w.</p>"},{"location":"extension/migrations/migrations/#generatemigrationlist","title":"generateMigrationList","text":"<pre><code>protected function generateMigrationList(): void\n</code></pre> <p>Generuje list\u0119 plik\u00f3w migracji do wykonania.</p>"},{"location":"extension/migrations/migrations/#inittable","title":"initTable","text":"<pre><code>protected function initTable(): void\n</code></pre> <p>Inicjuje tabel\u0119 migracji w bazie danych.</p>"},{"location":"extension/migrations/migrations/#connectdatabase","title":"connectDatabase","text":"<pre><code>protected function connectDatabase(): void\n</code></pre> <p>\u0141\u0105czy z baz\u0105 danych u\u017cywaj\u0105c konfiguracji.</p>"},{"location":"extension/migrations/start/","title":"Migracje","text":"<p>Migraje uruchamiaj\u0105 skrypty SQL z folderu <code>migrations</code> z kolejno\u015bci\u0105 w celu \u0142atwego aktualizowania bazy danych</p> <p>Migracje uruchamiane s\u0105 w kolejno\u015bci numerycznej od 1 do 9, dlatego wa\u017cnym jest nazywanie plik\u00f3w <code>.sql</code> numerycznie w kolejno\u015bci uruchomienia od najmniejszego do najwi\u0119kszego</p>"},{"location":"extension/migrations/start/#instalacja","title":"Instalacja","text":"<pre><code>composer require nimblephp/migrations\n</code></pre>"},{"location":"extension/migrations/start/#uzycie","title":"U\u017cycie","text":"<ol> <li>W folderze projektu tworzymi plik <code>update.php</code> oraz folder <code>migrations</code></li> <li>w pliku update.php wpisujemy nast\u0119puj\u0105cy kod:</li> </ol> <pre><code>&lt;?php\n\ninclude('../vendor/autoload.php');\n\n$migrations = new \\Nimblephp\\migrations\\Migrations(__DIR__);\n$migrations-&gt;runMigrations();\n</code></pre> <ol> <li>W folderze pliku <code>migrations</code> mo\u017cemy utworzy\u0107 pliku <code>.sql</code> lub <code>.php</code> o nazwie odpowiadaj\u0105cej <code>timestamp</code> (bash: <code>date +%s</code>)</li> <li>Uruchamiamy plik <code>update.php</code> w konsoli (<code>php update.php</code>)</li> </ol>"},{"location":"extension/migrations/start/#wyglad-pliku-php","title":"Wygl\u0105d pliku PHP","text":"<pre><code>&lt;?php\n\nuse Nimblephp\\migrations\\AbstractMigration;\n\nreturn new class extends AbstractMigration {\n\n    public function run()\n    {\n        //kod do wykonania\n    }\n\n};\n</code></pre>"},{"location":"extension/migrations/status/","title":"Statusy","text":""},{"location":"extension/migrations/status/#namespace","title":"Namespace","text":"<pre><code>Nimblephp\\migrations\\Status\n</code></pre>"},{"location":"extension/migrations/status/#enum","title":"Enum","text":"<ul> <li>PENDING - W trakcie</li> <li>FINISHED - Zako\u0144czone</li> <li>FAILED - B\u0142\u0105d</li> </ul>"},{"location":"extension/twig/start/","title":"Obs\u0142uga Twig","text":"<p>Widoki z obs\u0142ug\u0105 silnika szablon\u00f3w Twig</p>"},{"location":"extension/twig/start/#instalacja","title":"Instalacja","text":"<pre><code>composer require nimblephp/twig\n</code></pre>"},{"location":"extension/twig/start/#uzycie","title":"U\u017cycie","text":"<ol> <li>Nale\u017cy utworzy\u0107 plik w folderze <code>View</code> o rozszerzeniu <code>.twig</code> np. <code>test.twig</code></li> <li>W metodzie kontrolera dajemy:</li> </ol> <pre><code>$view = new View(new Twig());\n$view-&gt;render('test');\n</code></pre>"},{"location":"extension/twig/start/#konfiguracja","title":"Konfiguracja","text":"<ul> <li>TWIG_CACHE (false) - czy twig ma tworzy\u0107 cache</li> </ul>"},{"location":"extension/twig/twig/","title":"Instancja Pomocnika Twig","text":"<p>Klasa odpowiada za zarz\u0105dzanie \u015brodowiskiem renderowania szablon\u00f3w Twig.</p>"},{"location":"extension/twig/twig/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\twig\\Twig\n</code></pre>"},{"location":"extension/twig/twig/#zmienne","title":"Zmienne","text":"<ul> <li>twigFileSystemLoader: Instancja <code>FilesystemLoader</code> do zarz\u0105dzania \u015bcie\u017ckami plik\u00f3w.</li> <li>twigEnvironment: Instancja <code>Environment</code> reprezentuj\u0105ca \u015brodowisko Twig.</li> </ul>"},{"location":"extension/twig/twig/#metody","title":"Metody","text":""},{"location":"extension/twig/twig/#addpath","title":"addPath","text":"<pre><code>public function addPath($path): void\n</code></pre> <ul> <li>Dodaje \u015bcie\u017ck\u0119 do loadera systemu plik\u00f3w.</li> </ul>"},{"location":"extension/twig/twig/#render","title":"render","text":"<pre><code>public function render(string $twigFilePath, array $variables = []): string\n</code></pre> <p>Renderuje widok Twig z okre\u015blonymi zmiennymi i zwraca wynikowy ci\u0105g.</p>"},{"location":"extension/twig/twig/#rendersimpleexception","title":"renderSimpleException","text":"<pre><code>public function renderSimpleException(Throwable $throwable): string\n</code></pre> <p>Renderuje przyjazny dla u\u017cytkownika widok b\u0142\u0119du</p>"},{"location":"extension/twig/view/","title":"Instancja Widoku Twig","text":"<p>Klasa <code>View</code> jest zaprojektowana do zarz\u0105dzania renderowaniem widok\u00f3w za pomoc\u0105 silnika szablon\u00f3w Twig.</p>"},{"location":"extension/twig/view/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\twig\\View\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ViewInterface\n</code></pre>"},{"location":"extension/twig/view/#wasciwosci","title":"W\u0142a\u015bciwo\u015bci","text":"<ul> <li>\u015acie\u017cka widoku: <code>protected string $viewPath = '/src/View/'</code></li> <li>Zmienne widoku: <code>protected array $variables = []</code></li> <li>Instancja Twig: <code>protected Twig $twig</code></li> <li>Kod odpowiedzi: <code>protected int $responseCode = 200</code></li> </ul>"},{"location":"extension/twig/view/#konstruktor","title":"Konstruktor","text":"<ul> <li>Przyjmuje instancj\u0119 <code>Twig</code> i inicjalizuje klas\u0119.</li> </ul>"},{"location":"extension/twig/view/#metody","title":"Metody","text":""},{"location":"extension/twig/view/#setresponsecode","title":"setResponseCode","text":"<pre><code>public function setResponseCode(int $responseCode): void\n</code></pre> <p>Definiowanie kodu odpowiedzi.</p>"},{"location":"extension/twig/view/#render","title":"render","text":"<pre><code>public function render(string $viewName, array $data = []): void\n</code></pre> <p>Renderowanie widoku na podstawie nazwy widoku i dostarczonych danych.</p>"}]}
{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"NimblePHP","text":"<p>NimblePHP to prosty framework PHP oparty o MVC kt\u00f3ry ma u\u0142atwi\u0107 tworzenie projekt\u00f3w.</p>"},{"location":"#cele","title":"Cele","text":"<p>Framework opiera si\u0119 na prostych celach:</p> <ol> <li>Prostota</li> <li>Przejszysto\u015b\u0107</li> <li>Szybko\u015b\u0107</li> </ol>"},{"location":"default-config/","title":"Domy\u015blna konfiguracja","text":"<pre><code>DEBUG=false\nLOG=true\nDEFAULT_CONTROLLER=index\nDEFAULT_METHOD=index\nDATABASE=false\nDATABASE_CHARSET=utf8\nDATABASE_HOST=127.0.0.1\nDATABASE_NAME=\nDATABASE_USERNAME=\nDATABASE_PASSWORD=\nDATABASE_PORT=3306\n</code></pre>"},{"location":"exceptions/","title":"Wyj\u0105tki","text":"<p>Lista zwracanych wyj\u0105tk\u00f3w:</p>"},{"location":"exceptions/#gowny-wyjatek","title":"G\u0142\u00f3wny wyj\u0105tek","text":"<p>Nadrz\u0119dny wyj\u0105tek, \"rodzic\" wszystkich wyj\u0105tk\u00f3w zwracanych przez framework.</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"System error\", int $code = 500, ?Throwable $previous = null)\n</code></pre>"},{"location":"exceptions/#wyjatek-nie-znaleziono","title":"Wyj\u0105tek \"nie znaleziono\"","text":"<p>Wyj\u0105tek zwracany, je\u017celi dana klasa, metoda, plik itd. nie istnieje.</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"Not found\", int $code = 404, ?Throwable $previous = null)\n</code></pre>"},{"location":"exceptions/#ukryty-wyjatek","title":"Ukryty wyj\u0105tek","text":"<p>Wyj\u0105tek zwraca b\u0142\u0105d ale ukrywa tre\u015b\u0107 dla klienta</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\HiddenException\n</code></pre> <p>Rodzic:</p> <pre><code>Nimblephp\\framework\\Exception\\NimbleException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"System error\", int $code = 500, ?Throwable $previous = null)```\n</code></pre> <p>Metody:</p>"},{"location":"exceptions/#gethiddenmessage","title":"getHiddenMessage","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Zwraca ukryt\u0105 tre\u015b\u0107</p>"},{"location":"exceptions/#wyjatek-bazodanowy","title":"Wyj\u0105tek bazodanowy","text":"<p>Wyj\u0105tek dla b\u0142\u0119d\u00f3w bazy danych</p> <p>Namespace:</p> <pre><code>Nimblephp\\framework\\Exception\\DatabaseException\n</code></pre> <p>Rodzic:</p> <pre><code>Nimblephp\\framework\\Exception\\HiddenException\n</code></pre> <p>Konstruktor:</p> <pre><code>public function __construct(string $message = \"Database error\", int $code = 500, ?Throwable $previous = null)\n</code></pre>"},{"location":"how-start/","title":"Jak zacz\u0105\u0107","text":"<p>Na samym pocz\u0105tku nale\u017cy zaimportowa\u0107 repozytorium composer</p> <pre><code>composer require nimblephp/framework\n</code></pre> <p>Nast\u0119pnie nale\u017cy utworzy\u0107 folder <code>public</code> a w nim plik <code>index.php</code> o tre\u015bci:</p> <pre><code>&lt;?php\n\nrequire('../vendor/autoload.php');\n\n$route = new \\Nimblephp\\framework\\Route(new \\Nimblephp\\framework\\Request());\n$kernel = new \\Nimblephp\\framework\\Kernel($route);\n$kernel-&gt;handle();\n</code></pre> <p>oraz plik .htaccess z zawarto\u015bci\u0105:</p> <pre><code>RewriteEngine On\nRewriteCond %{REQUEST_FILENAME} !-f\nRewriteCond %{REQUEST_FILENAME} !-d\nRewriteRule ^(.+)$ index.php?url=$1 [QSA,L]\n</code></pre> <p>Teraz nale\u017cy uruchomi\u0107 plik index.php, pierwsze uruchomienie spowoduje utworzenie folder\u00f3w wymaganych przez projekt</p> <p>Aktualnie powinno wygl\u0105da\u0107 to tak:</p> <pre><code>* folder_projektu\n    * public\n        * index.php\n        * .htaccess\n    * src\n        * Controller\n        * Model\n        * View\n    * storage\n        * logs\n    * vendor\n</code></pre> <p>Teraz \"podstawowa\" wersja jest ju\u017c stworzona i mo\u017cna zacz\u0105\u0107 pisa\u0107 w\u0142asn\u0105 wirtyn\u0119.</p>"},{"location":"required/","title":"Wymagania","text":"<p>Aby uruchomi\u0107 framework wymagane jest:</p> <ul> <li>PHP &gt;= 8.2</li> <li>Composer</li> </ul>"},{"location":"documentation/config/","title":"Config","text":"<p>Klasa s\u0142u\u017cy do zarz\u0105dzania konfiguracj\u0105 aplikacji, umo\u017cliwiaj\u0105c \u0142adowanie, zapisywanie i pobieranie warto\u015bci konfiguracyjnych.</p>"},{"location":"documentation/config/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Config\n</code></pre>"},{"location":"documentation/config/#zmienne","title":"Zmienne","text":"<ul> <li>protected static array $config: Przechowuje wszystkie warto\u015bci konfiguracyjne jako tablica asocjacyjna.</li> </ul>"},{"location":"documentation/config/#metody","title":"Metody","text":""},{"location":"documentation/config/#get","title":"get","text":"<pre><code>public static function get(string $name, mixed $default = null): mixed\n</code></pre> <p>Pobiera warto\u015b\u0107 konfiguracji o podanej nazwie. Je\u015bli warto\u015b\u0107 nie istnieje, zwraca warto\u015b\u0107 domy\u015bln\u0105.</p>"},{"location":"documentation/config/#set","title":"set","text":"<pre><code>public static function set(string $name, string $value): void\n</code></pre> <p>Ustawia warto\u015b\u0107 konfiguracji o podanej nazwie.</p>"},{"location":"documentation/config/#loadfromenv","title":"loadFromEnv","text":"<pre><code>public static function loadFromEnv(string $filePath): bool\n</code></pre> <p>\u0141aduje konfiguracje z pliku \u015brodowiskowego. Zwraca <code>true</code> je\u015bli za\u0142adowanie si\u0119 powiod\u0142o, w przeciwnym razie <code>false</code>.</p>"},{"location":"documentation/config/#processenvcontent","title":"processEnvContent","text":"<pre><code>protected static function processEnvContent(string $content): void\n</code></pre> <p>Przetwarza pojedyncz\u0105 lini\u0119 pliku \u015brodowiskowego, parsuj\u0105c nazw\u0119 i warto\u015b\u0107, a nast\u0119pnie zapisuje je do tablicy konfiguracji.</p>"},{"location":"documentation/config/#parseenvvalue","title":"parseEnvValue","text":"<pre><code>protected static function parseEnvValue(mixed $value): mixed\n</code></pre> <p>Parsuje warto\u015b\u0107 podan\u0105 jako string do odpowiedniego typu danych, np. liczby, warto\u015bci logiczne, czy ci\u0105gi znak\u00f3w.</p>"},{"location":"documentation/controller/","title":"Controller","text":"<p>Kontroler odpowiada za odbieranie danych od u\u017cytkownika, decydowanie o tym, co zrobi\u0107 z tymi danymi, a nast\u0119pnie delegowanie zada\u0144 do odpowiednich modeli lub wy\u015bwietlanie odpowiednich widok\u00f3w.</p>"},{"location":"documentation/controller/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Controller\n</code></pre> <p>Abstract:</p> <pre><code>Nimblephp\\framework\\Abstracts\\AbstractController\n</code></pre>"},{"location":"documentation/controller/#zmienne","title":"Zmienne","text":"<ul> <li>public string $name: Nazwa za\u0142adowanego kontrolera.</li> <li>public string $action: Nazwa wywo\u0142anej akcji.</li> </ul>"},{"location":"documentation/controller/#metody","title":"Metody","text":""},{"location":"documentation/controller/#loadmodel","title":"loadModel","text":"<pre><code>public function loadModel(string $name): AbstractModel\n</code></pre> <p>Metoda loadModel s\u0142u\u017cy do \u0142adowania modelu na podstawie podanej nazwy.</p>"},{"location":"documentation/kernel/","title":"Kernel","text":"<p>Klasa pe\u0142ni funkcj\u0119 centralnego punktu zarz\u0105dzania aplikacj\u0105, obs\u0142uguj\u0105c procesy inicjalizacyjne i wykonawcze.</p>"},{"location":"documentation/kernel/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Kernel\n</code></pre>"},{"location":"documentation/kernel/#zmienne","title":"Zmienne","text":"<ul> <li>$projectPath: Statyczna \u015bcie\u017cka do projektu.</li> <li>$router: Instancja <code>RouteInterface</code>.</li> <li>$request: Instancja <code>RequestInterface</code>.</li> <li>$response: Instancja <code>ResponseInterface</code>.</li> </ul>"},{"location":"documentation/kernel/#konstruktor","title":"Konstruktor","text":"<pre><code>public function __construct(RouteInterface $router)\n</code></pre> <p>Inicjalizuje podstawowe sk\u0142adniki aplikacji, w tym router i obiekty \u017c\u0105dania/odpowiedzi.</p>"},{"location":"documentation/kernel/#metody","title":"Metody","text":""},{"location":"documentation/kernel/#handle","title":"handle","text":"<pre><code>public function handle(): void\n</code></pre> <p>Uruchamia aplikacj\u0119, obs\u0142uguj\u0105c \u017c\u0105danie i generuj\u0105c odpowied\u017a.</p>"},{"location":"documentation/kernel/#bootstrap","title":"bootstrap","text":"<pre><code>protected function bootstrap(): void\n</code></pre> <p>Inicjalizuje konfiguracje i us\u0142ugi, przygotowuje aplikacj\u0119 do dzia\u0142ania.</p>"},{"location":"documentation/kernel/#getprojectpath","title":"getProjectPath","text":"<pre><code>protected function getProjectPath(): string\n</code></pre> <p>Pobranie \u015bcie\u017cki do projektu</p>"},{"location":"documentation/kernel/#loadconfiguration","title":"loadConfiguration","text":"<pre><code>public function loadConfiguration(): void\n</code></pre> <p>Pobranie konfiguracji</p>"},{"location":"documentation/kernel/#autocreator","title":"autoCreator","text":"<pre><code>protected function autoCreator(): void\n</code></pre> <p>Automatyczne tworzenie folder\u00f3w</p>"},{"location":"documentation/kernel/#initializesession","title":"initializeSession","text":"<pre><code>protected function initializeSession(): void\n</code></pre> <p>Inicjowanie sesji</p>"},{"location":"documentation/kernel/#connecttodatabase","title":"connectToDatabase","text":"<pre><code>protected function connectToDatabase(): void\n</code></pre> <p>\u0141\u0105czenie z baz\u0105 danych</p>"},{"location":"documentation/kernel/#autoloader","title":"autoloader","text":"<pre><code>protected function autoloader(): void\n</code></pre> <p>Autoloader</p>"},{"location":"documentation/kernel/#handleexception","title":"handleException","text":"<pre><code>protected function handleException(Throwable $exception): void\n</code></pre> <p>\u0141apanie wyj\u0105tk\u00f3w</p>"},{"location":"documentation/kernel/#debug","title":"debug","text":"<pre><code>protected function debug(): void\n</code></pre> <p>Inicjowanie debugowania</p>"},{"location":"documentation/log/","title":"Log","text":"<p>Klasa s\u0142u\u017cy do logowania zdarze\u0144 w aplikacji.</p>"},{"location":"documentation/log/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Log\n</code></pre>"},{"location":"documentation/log/#zmienne","title":"Zmienne","text":"<ul> <li>public static string $session: Unikatowy identyfikator sesji, generowany dla ka\u017cdej sesji logowania.</li> </ul>"},{"location":"documentation/log/#metody","title":"Metody","text":""},{"location":"documentation/log/#log_1","title":"log","text":"<pre><code>public static function log(string $message, string $level = 'INFO', array $content = []): bool\n</code></pre> <p>Metoda do zapisywania log\u00f3w. Pozwala na zapisanie wiadomo\u015bci logu, poziomu logowania oraz dodatkowych tre\u015bci. Log jest zapisywany tylko je\u015bli w konfiguracji aplikacji w\u0142\u0105czone jest logowanie. Generuje unikatowy identyfikator sesji, je\u015bli nie istnieje. Formatuje i zapisuje dane logu w pliku JSON w katalogu log\u00f3w projektu. Zwraca <code>true</code>, je\u015bli zapis si\u0119 powi\u00f3d\u0142, lub <code>false</code> w przypadku niepowodzenia.</p>"},{"location":"documentation/model/","title":"Model","text":"<p>Model to g\u0142\u00f3wna cz\u0119\u015b\u0107 systemu odpowiadaj\u0105ca za logik\u0119 biznesow\u0105 i zarz\u0105dzanie danymi. Jego zadaniem jest przechowywanie danych, ich przetwarzanie i dostarczanie ich w odpowiedniej formie do kontrolera.</p>"},{"location":"documentation/model/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Model\n</code></pre> <p>Abstract:</p> <pre><code>Nimblephp\\framework\\Abstracts\\AbstractModel\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ModelInterface\n</code></pre>"},{"location":"documentation/model/#zmienne","title":"Zmienne","text":"<ul> <li>public null|string|false $useTable: Nazwa tabeli w bazie danych u\u017cywana przez model, <code>null</code> oznacza automatyczne ustalenie nazwy, <code>false</code> deaktywuje dzia\u0142anie z baz\u0105 danych.</li> <li>public string $name: Nazwa modelu.</li> <li>protected Table $table: Instancja tabeli obs\u0142uguj\u0105cej operacje na bazie danych.</li> <li>protected ?int $id: Aktualne ID elementu w bazie danych.</li> </ul>"},{"location":"documentation/model/#metody","title":"Metody","text":""},{"location":"documentation/model/#create","title":"create","text":"<pre><code>public function create(array $data): bool\n</code></pre> <p>Tworzy nowy rekord w bazie danych na podstawie dostarczonych danych. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#read","title":"read","text":"<pre><code>public function read(?array $condition = null, ?array $columns = null, ?string $orderBy = null): array\n</code></pre> <p>Zwraca pojedynczy rekord na podstawie podanych warunk\u00f3w. Rzuca <code>DatabaseException</code> przy b\u0142\u0119dzie.</p>"},{"location":"documentation/model/#readall","title":"readAll","text":"<pre><code>public function readAll(?array $condition = null, ?array $columns = null, ?string $orderBy = null, ?string $limit = null, ?string $groupBy = null): array\n</code></pre> <p>Zwraca list\u0119 rekord\u00f3w spe\u0142niaj\u0105cych podane warunki. Rzuca <code>DatabaseException</code> przy b\u0142\u0119dzie.</p>"},{"location":"documentation/model/#update","title":"update","text":"<pre><code>public function update(array $data): bool\n</code></pre> <p>Aktualizuje rekord o danym ID, u\u017cywaj\u0105c dostarczonych danych. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#delete","title":"delete","text":"<pre><code>public function delete(): bool\n</code></pre> <p>Usuwa rekord o danym ID. Rzuca <code>DatabaseException</code> je\u015bli operacja nie powiedzie si\u0119.</p>"},{"location":"documentation/model/#getid","title":"getId","text":"<pre><code>public function getId(): ?int\n</code></pre> <p>Zwraca ID aktualnie zarz\u0105dzanego elementu.</p>"},{"location":"documentation/model/#setid","title":"setId","text":"<pre><code>public function setId(?int $id = null): ModelInterface\n</code></pre> <p>Ustawia ID dla aktualnie zarz\u0105dzanego elementu, zwraca sam\u0105 siebie.</p>"},{"location":"documentation/model/#preparetableinstance","title":"prepareTableInstance","text":"<pre><code>public function prepareTableInstance(): void\n</code></pre> <p>Przygotowuje instancj\u0119 tabeli, na kt\u00f3rej b\u0119d\u0105 wykonywane operacje.</p>"},{"location":"documentation/request/","title":"Request","text":"<p>Klasa s\u0142u\u017cy do obs\u0142ugi \u017c\u0105da\u0144 HTTP.</p>"},{"location":"documentation/request/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Request\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\RequestInterface\n</code></pre>"},{"location":"documentation/request/#zmienne","title":"Zmienne","text":"<ul> <li>private array $query: Dane przes\u0142ane metod\u0105 GET.</li> <li>private array $post: Dane przes\u0142ane metod\u0105 POST.</li> <li>private array $cookies: Ciasteczka HTTP \u017c\u0105dania.</li> <li>private array $files: Pliki przes\u0142ane w ramach \u017c\u0105dania.</li> <li>private array $headers: Nag\u0142\u00f3wki HTTP \u017c\u0105dania.</li> <li>private array $server: Informacje o serwerze i \u015brodowisku wykonania \u017c\u0105dania.</li> </ul>"},{"location":"documentation/request/#metody","title":"Metody","text":""},{"location":"documentation/request/#__construct","title":"__construct","text":"<pre><code>__construct()\n</code></pre> <p>Konstruktor klasy, inicjalizuje zmienne przechowuj\u0105ce dane \u017c\u0105dania.</p>"},{"location":"documentation/request/#getallheaders","title":"getAllHeaders","text":"<pre><code>private function getAllHeaders(): array\n</code></pre> <p>Pobiera wszystkie nag\u0142\u00f3wki HTTP \u017c\u0105dania.</p>"},{"location":"documentation/request/#getquery","title":"getQuery","text":"<pre><code>public function getQuery($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci przekazanej metod\u0105 GET.</p>"},{"location":"documentation/request/#getpost","title":"getPost","text":"<pre><code>public function getPost($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci przekazanej metod\u0105 POST.</p>"},{"location":"documentation/request/#getcookie","title":"getCookie","text":"<pre><code>public function getCookie($key, $default = null): mixed\n</code></pre> <p>Pobranie warto\u015bci ciasteczka.</p>"},{"location":"documentation/request/#getfile","title":"getFile","text":"<pre><code>public function getFile($key): mixed\n</code></pre> <p>Pobranie przes\u0142anego pliku.</p>"},{"location":"documentation/request/#getheader","title":"getHeader","text":"<pre><code>public function getHeader($key): mixed\n</code></pre> <p>Pobranie warto\u015bci nag\u0142\u00f3wka.</p>"},{"location":"documentation/request/#getmethod","title":"getMethod","text":"<pre><code>public function getMethod(): string\n</code></pre> <p>Pobranie metody HTTP \u017c\u0105dania.</p>"},{"location":"documentation/request/#geturi","title":"getUri","text":"<pre><code>public function getUri(): string\n</code></pre> <p>Pobranie URI \u017c\u0105dania.</p>"},{"location":"documentation/request/#getserver","title":"getServer","text":"<pre><code>public function getServer($key, $default = null): mixed\n</code></pre> <p>Pobranie informacji o serwerze lub \u015brodowisku.</p>"},{"location":"documentation/response/","title":"Response","text":"<p>Klasa s\u0142u\u017cy do obs\u0142ugi odpowiedzi HTTP.</p>"},{"location":"documentation/response/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Response\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ResponseInterface\n</code></pre>"},{"location":"documentation/response/#zmienne","title":"Zmienne","text":"<ul> <li>protected mixed $content: Tre\u015b\u0107 odpowiedzi, mo\u017ce by\u0107 r\u00f3\u017cnego typu.</li> <li>protected int $statusCode = 200: Kod statusu HTTP odpowiedzi, domy\u015blnie 200.</li> <li>protected array $headers = []: Tablica nag\u0142\u00f3wk\u00f3w HTTP odpowiedzi.</li> <li>protected string $statusText = '': Tekstowy opis kodu statusu HTTP.</li> </ul>"},{"location":"documentation/response/#metody","title":"Metody","text":""},{"location":"documentation/response/#__construct","title":"__construct","text":"<pre><code>__construct()\n</code></pre> <p>Konstruktor klasy, nie jest zdefiniowany w podanym kodzie.</p>"},{"location":"documentation/response/#getcontent","title":"getContent","text":"<pre><code>public function getContent(): string\n</code></pre> <p>Pobranie tre\u015bci odpowiedzi.</p>"},{"location":"documentation/response/#setcontent","title":"setContent","text":"<pre><code>public function setContent(mixed $content): void\n</code></pre> <p>Ustawienie tre\u015bci odpowiedzi.</p>"},{"location":"documentation/response/#getstatuscode","title":"getStatusCode","text":"<pre><code>public function getStatusCode(): int\n</code></pre> <p>Pobranie kodu statusu HTTP.</p>"},{"location":"documentation/response/#setstatuscode","title":"setStatusCode","text":"<pre><code>public function setStatusCode(int $code, string $text = ''): void\n</code></pre> <p>Ustawienie kodu statusu HTTP i opcjonalnie tekstowego opisu.</p>"},{"location":"documentation/response/#addheader","title":"addHeader","text":"<pre><code>public function addHeader(string $name, string $value): void\n</code></pre> <p>Dodanie nag\u0142\u00f3wka HTTP do odpowiedzi.</p>"},{"location":"documentation/response/#send","title":"send","text":"<pre><code>public function send(): void\n</code></pre> <p>Wys\u0142anie odpowiedzi do klienta, wraz z nag\u0142\u00f3wkami i tre\u015bci\u0105.</p>"},{"location":"documentation/route/","title":"Route","text":"<p>Klasa s\u0142u\u017cy do interpretacji \u017c\u0105da\u0144 URL.</p>"},{"location":"documentation/route/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\Route\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\RouteInterface\n</code></pre>"},{"location":"documentation/route/#zmienne","title":"Zmienne","text":"<ul> <li>protected ?string $controller': Nazwa kontrolera.</li> <li>protected ?string $method: Nazwa metody.</li> <li>protected array $params = []: Parametry.</li> </ul>"},{"location":"documentation/route/#metody","title":"Metody","text":""},{"location":"documentation/route/#__construct","title":"__construct","text":"<pre><code>__construct(RequestInterface $request)\n</code></pre> <p>Tworzenie instancji routingu.</p>"},{"location":"documentation/route/#getcontroller","title":"getController","text":"<pre><code>public function getController(): string\n</code></pre> <p>Pobranie nazwy kontrolera.</p>"},{"location":"documentation/route/#setcontroller","title":"setController","text":"<pre><code>public function setController(?string $controller): void\n</code></pre> <p>Zmiana nazwy kontrolera.</p>"},{"location":"documentation/route/#getmethod","title":"getMethod","text":"<pre><code>public function getMethod(): string\n</code></pre> <p>Pobranie nazwy metody.</p>"},{"location":"documentation/route/#setmethod","title":"setMethod","text":"<pre><code>public function setMethod(?string $method): void\n</code></pre> <p>Zmiana nazwy metody.</p>"},{"location":"documentation/route/#getparams","title":"getParams","text":"<pre><code>public function getParams(): array\n</code></pre> <p>Pobranie parametr\u00f3w.</p>"},{"location":"documentation/route/#setparams","title":"setParams","text":"<pre><code>public function setParams(array $params): void\n</code></pre> <p>Zmiana parametr\u00f3w.</p>"},{"location":"documentation/view/","title":"View","text":"<p>Wskaz\u00f3wka: Domy\u015blny widok opiera si\u0119 na plikach phtml. Je\u015bli potrzebujesz bardziej zaawansowanych widok\u00f3w, wkr\u00f3tce pojawi si\u0119 instrukcja i kod dla twig i innych.</p> <p>Widok odpowiada za prezentacj\u0119 danych u\u017cytkownikowi. Jest to komponent, kt\u00f3ry wy\u015bwietla dane, kt\u00f3re otrzymuje z kontrolera, zazwyczaj w postaci graficznego interfejsu u\u017cytkownika.</p>"},{"location":"documentation/view/#alternawywy","title":"Alternawywy","text":"<ul> <li>Twig</li> </ul>"},{"location":"documentation/view/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\framework\\View\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ViewInterface\n</code></pre>"},{"location":"documentation/view/#zmienne","title":"Zmienne","text":"<ul> <li>protected string $viewPath = '/src/View/': \u015acie\u017cka do folderu z widokami.</li> <li>protected int $responseCode = 200: Kod odpowiedzi.</li> </ul>"},{"location":"documentation/view/#metody","title":"Metody","text":""},{"location":"documentation/view/#setresponsecode","title":"setResponseCode","text":"<pre><code>public function setResponseCode(int $responseCode): void\n</code></pre> <p>Definiowanie kodu odpowiedzi.</p>"},{"location":"documentation/view/#render","title":"render","text":"<pre><code>public function render(string $viewName, array $data = []): void\n</code></pre> <p>Renderowanie widoku na podstawie nazwy widoku i dostarczonych danych.</p>"},{"location":"extension/migrations/migrations/","title":"Migrations","text":"<p>Klasa zarz\u0105dza procesem migracji bazy danych.</p>"},{"location":"extension/migrations/migrations/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\migrations\\Migrations\n</code></pre>"},{"location":"extension/migrations/migrations/#wasciwosci","title":"W\u0142a\u015bciwo\u015bci","text":"<ul> <li>$projectPath: \u015acie\u017cka do projektu.</li> <li>$migrationsPath: \u015acie\u017cka do katalogu migracji.</li> <li>$migrationList: Lista plik\u00f3w migracji.</li> <li>$migrationTable: Instancja tabeli migracji.</li> </ul>"},{"location":"extension/migrations/migrations/#konstruktor","title":"Konstruktor","text":"<pre><code>public function __construct(string $projectPath)\n</code></pre> <p>Inicjalizuje \u015bcie\u017cki i konfiguracje, \u0142\u0105czy z baz\u0105 danych, inicjuje tabel\u0119 migracji.</p>"},{"location":"extension/migrations/migrations/#metody","title":"Metody","text":""},{"location":"extension/migrations/migrations/#runmigrations","title":"runMigrations","text":"<pre><code>public function runMigrations(): void\n</code></pre> <p>Uruchamia wszystkie migracje zdefiniowane w katalogu migracji.</p>"},{"location":"extension/migrations/migrations/#checkmigrations","title":"checkMigrations","text":"<pre><code>protected function checkMigrations(): void\n</code></pre> <p>Sprawdza status istniej\u0105cych migracji, rzuca wyj\u0105tki w przypadku b\u0142\u0119d\u00f3w.</p>"},{"location":"extension/migrations/migrations/#generatemigrationlist","title":"generateMigrationList","text":"<pre><code>protected function generateMigrationList(): void\n</code></pre> <p>Generuje list\u0119 plik\u00f3w migracji do wykonania.</p>"},{"location":"extension/migrations/migrations/#inittable","title":"initTable","text":"<pre><code>protected function initTable(): void\n</code></pre> <p>Inicjuje tabel\u0119 migracji w bazie danych.</p>"},{"location":"extension/migrations/migrations/#connectdatabase","title":"connectDatabase","text":"<pre><code>protected function connectDatabase(): void\n</code></pre> <p>\u0141\u0105czy z baz\u0105 danych u\u017cywaj\u0105c konfiguracji.</p>"},{"location":"extension/migrations/start/","title":"Migracje","text":"<p>Migraje uruchamiaj\u0105 skrypty SQL z folderu <code>migrations</code> z kolejno\u015bci\u0105 w celu \u0142atwego aktualizowania bazy danych</p> <p>Migracje uruchamiane s\u0105 w kolejno\u015bci numerycznej od 1 do 9, dlatego wa\u017cnym jest nazywanie plik\u00f3w <code>.sql</code> numerycznie w kolejno\u015bci uruchomienia od najmniejszego do najwi\u0119kszego</p>"},{"location":"extension/migrations/start/#instalacja","title":"Instalacja","text":"<pre><code>composer require nimblephp/migrations\n</code></pre>"},{"location":"extension/migrations/start/#uzycie","title":"U\u017cycie","text":"<ol> <li>W folderze projektu tworzymi plik <code>update.php</code> oraz folder <code>migrations</code></li> <li>w pliku update.php wpisujemy nast\u0119puj\u0105cy kod:</li> </ol> <pre><code>&lt;?php\n\ninclude('../vendor/autoload.php');\n\n$migrations = new \\Nimblephp\\migrations\\Migrations(__DIR__);\n$migrations-&gt;runMigrations();\n</code></pre> <ol> <li>W folderze pliku <code>migrations</code> mo\u017cemy utworzy\u0107 pliku <code>.sql</code> o nazwie <code>timestamp</code> (bash: <code>date +%s</code>)</li> <li>Uruchamiamy plik <code>update.php</code> w konsoli (<code>php update.php</code>)</li> </ol>"},{"location":"extension/migrations/status/","title":"Statusy","text":""},{"location":"extension/migrations/status/#namespace","title":"Namespace","text":"<pre><code>Nimblephp\\migrations\\Status\n</code></pre>"},{"location":"extension/migrations/status/#enum","title":"Enum","text":"<ul> <li>PENDING - W trakcie</li> <li>FINISHED - Zako\u0144czone</li> <li>FAILED - B\u0142\u0105d</li> </ul>"},{"location":"extension/twig/start/","title":"Obs\u0142uga Twig","text":"<p>Widoki z obs\u0142ug\u0105 silnika szablon\u00f3w Twig</p>"},{"location":"extension/twig/start/#instalacja","title":"Instalacja","text":"<pre><code>composer require nimblephp/twig\n</code></pre>"},{"location":"extension/twig/start/#uzycie","title":"U\u017cycie","text":"<ol> <li>Nale\u017cy utworzy\u0107 plik w folderze <code>View</code> o rozszerzeniu <code>.twig</code> np. <code>test.twig</code></li> <li>W metodzie kontrolera dajemy:</li> </ol> <pre><code>$view = new View(new Twig());\n$view-&gt;render('test');\n</code></pre>"},{"location":"extension/twig/start/#konfiguracja","title":"Konfiguracja","text":"<ul> <li>TWIG_CACHE (false) - czy twig ma tworzy\u0107 cache</li> </ul>"},{"location":"extension/twig/twig/","title":"Instancja Pomocnika Twig","text":"<p>Klasa odpowiada za zarz\u0105dzanie \u015brodowiskiem renderowania szablon\u00f3w Twig.</p>"},{"location":"extension/twig/twig/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\twig\\Twig\n</code></pre>"},{"location":"extension/twig/twig/#zmienne","title":"Zmienne","text":"<ul> <li>twigFileSystemLoader: Instancja <code>FilesystemLoader</code> do zarz\u0105dzania \u015bcie\u017ckami plik\u00f3w.</li> <li>twigEnvironment: Instancja <code>Environment</code> reprezentuj\u0105ca \u015brodowisko Twig.</li> </ul>"},{"location":"extension/twig/twig/#metody","title":"Metody","text":""},{"location":"extension/twig/twig/#addpath","title":"addPath","text":"<pre><code>public function addPath($path): void\n</code></pre> <ul> <li>Dodaje \u015bcie\u017ck\u0119 do loadera systemu plik\u00f3w.</li> </ul>"},{"location":"extension/twig/twig/#render","title":"render","text":"<pre><code>public function render(string $twigFilePath, array $variables = []): string\n</code></pre> <p>Renderuje widok Twig z okre\u015blonymi zmiennymi i zwraca wynikowy ci\u0105g.</p>"},{"location":"extension/twig/view/","title":"Instancja Widoku Twig","text":"<p>Klasa <code>View</code> jest zaprojektowana do zarz\u0105dzania renderowaniem widok\u00f3w za pomoc\u0105 silnika szablon\u00f3w Twig.</p>"},{"location":"extension/twig/view/#namespace","title":"Namespace","text":"<p>Klasa:</p> <pre><code>Nimblephp\\twig\\View\n</code></pre> <p>Interface:</p> <pre><code>Nimblephp\\framework\\Interfaces\\ViewInterface\n</code></pre>"},{"location":"extension/twig/view/#wasciwosci","title":"W\u0142a\u015bciwo\u015bci","text":"<ul> <li>\u015acie\u017cka widoku: <code>protected string $viewPath = '/src/View/'</code></li> <li>Zmienne widoku: <code>protected array $variables = []</code></li> <li>Instancja Twig: <code>protected Twig $twig</code></li> <li>Kod odpowiedzi: <code>protected int $responseCode = 200</code></li> </ul>"},{"location":"extension/twig/view/#konstruktor","title":"Konstruktor","text":"<ul> <li>Przyjmuje instancj\u0119 <code>Twig</code> i inicjalizuje klas\u0119.</li> </ul>"},{"location":"extension/twig/view/#metody","title":"Metody","text":""},{"location":"extension/twig/view/#setresponsecode","title":"setResponseCode","text":"<pre><code>public function setResponseCode(int $responseCode): void\n</code></pre> <p>Definiowanie kodu odpowiedzi.</p>"},{"location":"extension/twig/view/#render","title":"render","text":"<pre><code>public function render(string $viewName, array $data = []): void\n</code></pre> <p>Renderowanie widoku na podstawie nazwy widoku i dostarczonych danych.</p>"}]}